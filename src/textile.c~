#include "include.h"

void begin_textile(int (*process)()) {
  enable_raw_mode();
  clear_screen();

  char c;
  while (1) {
    int bytes_read = read(STDIN_FILENO, &c, 1);
    if (bytes_read == 1) {
     if (c == 'q') {
        printf("Quitting...\r\n");
        break;
      }
    }
    // if error break
    if (process() == 1) {
      break;
    }
  }
}

void test()

void append_block(Pattern *pattern, Block block) {
  //TODO check if curr_block_index is larger than max size
  pattern->weave[pattern->curr_weave_index] = block;
  pattern->curr_weave_index++;
}


//weft is horizontal 
void sequence_weft(Pattern *pattern, char sequece[MAX_SEQUENCE_SIZE]) {
  Block block = {
    .shuttle_pos = pattern->curr_position_shuttle,
    .sequence_type = 0,
    .sequece = sequece
  };
  
  append_block(pattern, block);  
}


/*
TODO

Here the idea

struct

Textile textile = {0};
Pattern pattern = {0};

sequence_weft(pattern, "*-->");
sequence_warp(pattern, "-->");
sequence_weft(pattern, "[b]"); // this is a button maybe?

weft - horizontal
warp - vertical

equals

*-->
|[b]
|
âˆ¨

pattern_register("pattern name", pattern, textile);


*/
